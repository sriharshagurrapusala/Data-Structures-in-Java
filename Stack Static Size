//stack implementation we need 2 classes
//1 Stack
//2 Main method class

class Stack
{
    int[] arr=new int[5];
    int top=-1;
    
    public boolean isEmpty()
    {
        if(top==-1)
        {
            return true;
        }
        return false;
    }
    
    public boolean isFull()
    {
        if(top==arr.length-1)
        {
            return true;
        }
        return false;
    }
    public void push(int data)
    {
        if(isFull()) //Don't use Stack.isFull()  use isFull()
        {
            System.out.println("Stack overflow");
        }
        else
        {
            top++;
            arr[top]=data;
        }
    }
    
    public int pop()
    {
        if(isEmpty())   //Don't use Stack.isEmpty() use isEmpty()
        {
            System.out.println("Stack Underflow");
        }
        else
        {
            int popped=arr[top];
            arr[top]=0;
            top--;
            return popped;
        }
        return -1;
    }
    
    public void peek()
    {
        if(isEmpty())
        {
            System.out.println("Stack is Empty ");
        }
        else
        {
        System.out.println(arr[top]+" is the peek value in stack");
        }
    }
    
    public void display()
    {
        for(int i=0;i<arr.length;i++)
        {
            System.out.print(arr[i]+" ");
        }
    }
}


public class Main
{
    public static void main(String[] args)
    {
        Stack s=new Stack();
        //System.out.println(s.isEmpty());
        s.push(1);
        s.push(7);
        s.display();
        System.out.println(s.pop());
        s.display();
        System.out.println();
        s.pop();
        s.display();
        System.out.println();
        s.pop();
        s.display();
        s.push(1);
        s.push(7);
        s.push(2);
        s.push(9);
        s.push(15);
        s.push(21);
        s.display();
        s.peek();
        
        
    }
}
